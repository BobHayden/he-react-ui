// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SubNavigation /> rendered correctly with fixture 1`] = `
<SubNavigationWrapped
  item={
    Object {
      "badge": "FREE",
      "items": Array [
        Object {
          "key": "MAIN",
          "label": "Main",
          "route": "/parent",
        },
        Object {
          "key": "SECONDARY",
          "label": "Secondary",
          "route": "/parent/secondary",
        },
      ],
      "key": "PARENT",
      "label": "Parent",
      "route": "/parent",
      "title": "Parent title",
    }
  }
  locations={
    Array [
      Object {
        "label": "Location A",
        "value": "Location A",
      },
      Object {
        "label": "Location B",
        "value": "Location B",
      },
    ]
  }
  logoutRoute="/logout"
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <SubNavigation
        item={
          Object {
            "badge": "FREE",
            "items": Array [
              Object {
                "key": "MAIN",
                "label": "Main",
                "route": "/parent",
              },
              Object {
                "key": "SECONDARY",
                "label": "Secondary",
                "route": "/parent/secondary",
              },
            ],
            "key": "PARENT",
            "label": "Parent",
            "route": "/parent",
            "title": "Parent title",
          }
        }
        locations={
          Array [
            Object {
              "label": "Location A",
              "value": "Location A",
            },
            Object {
              "label": "Location B",
              "value": "Location B",
            },
          ]
        }
        logoutRoute="/logout"
      >
        <div
          className="bar"
        >
          <div
            className="top"
          >
            <Heading
              className="heading"
              h1={true}
              h2={false}
              h3={false}
              h4={false}
              nav={false}
            >
              <h1
                className="heading h1 heading"
              >
                Parent title
              </h1>
            </Heading>
            <div
              className="controls"
            >
              <span
                className="rightControlOption"
              >
                <OnClickOutside(SingleSelect)
                  className="locationSelector"
                  eventTypes={
                    Array [
                      "mousedown",
                      "touchstart",
                    ]
                  }
                  excludeScrollbar={false}
                  id="locationSelector"
                  name="location"
                  options={
                    Array [
                      Object {
                        "label": "Location A",
                        "value": "Location A",
                      },
                      Object {
                        "label": "Location B",
                        "value": "Location B",
                      },
                    ]
                  }
                  outsideClickIgnoreClass="ignore-react-onclickoutside"
                  preventDefault={false}
                  stopPropagation={false}
                >
                  <SingleSelect
                    className="locationSelector"
                    disableOnClickOutside={[Function]}
                    disabled={false}
                    enableOnClickOutside={[Function]}
                    error=""
                    eventTypes={
                      Array [
                        "mousedown",
                        "touchstart",
                      ]
                    }
                    id="locationSelector"
                    inline={false}
                    name="location"
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "Location A",
                          "value": "Location A",
                        },
                        Object {
                          "label": "Location B",
                          "value": "Location B",
                        },
                      ]
                    }
                    outsideClickIgnoreClass="ignore-react-onclickoutside"
                    preventDefault={false}
                    stopPropagation={false}
                    value={null}
                  >
                    <div
                      className="outer locationSelector"
                      options={
                        Array [
                          Object {
                            "label": "Location A",
                            "value": "Location A",
                          },
                          Object {
                            "label": "Location B",
                            "value": "Location B",
                          },
                        ]
                      }
                    >
                      <div
                        className="select"
                        id="locationSelector"
                        onClick={[Function]}
                      >
                        <span>
                          Location A
                        </span>
                        <Icon
                          className="caret"
                          name="DropDown"
                        >
                          <DropDown
                            className="icon caret"
                          >
                            <svg
                              className="icon caret"
                              version="1.1"
                              viewBox="0 0 24 24"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <g
                                transform="translate(15.000000, 7.000000) rotate(90.000000)"
                              >
                                <path
                                  d="M2,6.93247919 L2,-0.932479194 C2,-1.20862157 2.22385763,-1.43247919 2.5,-1.43247919 C2.61696825,-1.43247919 2.7302347,-1.39147108 2.8200922,-1.31658983 L7.53906723,2.61588936 C7.75120568,2.7926714 7.77986771,3.10795375 7.60308567,3.3200922 C7.58372606,3.34332373 7.56229876,3.36475103 7.53906723,3.38411064 L2.8200922,7.31658983 C2.60795375,7.49337187 2.2926714,7.46470984 2.11588936,7.25257139 C2.04100811,7.16271389 2,7.04944745 2,6.93247919 Z"
                                />
                              </g>
                            </svg>
                          </DropDown>
                        </Icon>
                      </div>
                      <ul
                        className="options"
                      >
                        <li
                          className="option selected"
                          key="Location A"
                          onClick={[Function]}
                        >
                          Location A
                        </li>
                        <li
                          className="option"
                          key="Location B"
                          onClick={[Function]}
                        >
                          Location B
                        </li>
                      </ul>
                    </div>
                  </SingleSelect>
                </OnClickOutside(SingleSelect)>
              </span>
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                className="topNavLink"
                key="logout"
                title="Logout"
                to="/logout"
              >
                <Route
                  path="/logout"
                >
                  <Link
                    aria-current={false}
                    className="topNavLink"
                    replace={false}
                    title="Logout"
                    to="/logout"
                  >
                    <a
                      aria-current={false}
                      className="topNavLink"
                      href="/logout"
                      onClick={[Function]}
                      title="Logout"
                    >
                      <span
                        className="rightControlOption"
                      >
                        <Icon
                          className="icon"
                          name="Logout"
                        >
                          <Logout
                            className="icon icon"
                          >
                            <svg
                              className="icon icon"
                              version="1.1"
                              viewBox="0 1 16 16"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <g
                                fill="none"
                                fillRule="evenodd"
                                id="Symbols"
                                stroke="#5C7783"
                                strokeLinecap="round"
                                strokeLinejoin="round"
                                strokeWidth="1"
                              >
                                <path
                                  d="M6.5,6.16666667 L6.5,3.16666667 C6.5,2.61466667 6.948,2.16666667 7.5,2.16666667 L14.5,2.16666667 C15.052,2.16666667 15.5,2.61466667 15.5,3.16666667 L15.5,15.1666667 C15.5,15.7186667 15.052,16.1666667 14.5,16.1666667 L7.5,16.1666667 C6.948,16.1666667 6.5,15.7186667 6.5,15.1666667 L6.5,12.1666667"
                                  id="Shape"
                                />
                                <path
                                  d="M11.5,9.16666667 L0.5,9.16666667"
                                  id="Shape"
                                />
                                <polyline
                                  id="Shape"
                                  points="3.5 6.16666667 0.5 9.16666667 3.5 12.1666667"
                                />
                              </g>
                            </svg>
                          </Logout>
                        </Icon>
                        Logout
                      </span>
                    </a>
                  </Link>
                </Route>
              </NavLink>
            </div>
          </div>
          <div
            className="items"
          >
            <NavLink
              activeClassName="active"
              ariaCurrent="true"
              className="item"
              exact={true}
              key="0"
              title="Main"
              to="/parent"
            >
              <Route
                exact={true}
                path="/parent"
              >
                <Link
                  aria-current={false}
                  className="item"
                  replace={false}
                  title="Main"
                  to="/parent"
                >
                  <a
                    aria-current={false}
                    className="item"
                    href="/parent"
                    onClick={[Function]}
                    title="Main"
                  >
                    <span>
                      Main
                    </span>
                  </a>
                </Link>
              </Route>
            </NavLink>
            <NavLink
              activeClassName="active"
              ariaCurrent="true"
              className="item"
              exact={true}
              key="1"
              title="Secondary"
              to="/parent/secondary"
            >
              <Route
                exact={true}
                path="/parent/secondary"
              >
                <Link
                  aria-current={false}
                  className="item"
                  replace={false}
                  title="Secondary"
                  to="/parent/secondary"
                >
                  <a
                    aria-current={false}
                    className="item"
                    href="/parent/secondary"
                    onClick={[Function]}
                    title="Secondary"
                  >
                    <span>
                      Secondary
                    </span>
                  </a>
                </Link>
              </Route>
            </NavLink>
          </div>
        </div>
      </SubNavigation>
    </Router>
  </BrowserRouter>
</SubNavigationWrapped>
`;
